@model DrinkIt.WebApp.Models.Bebida

@{
    ViewBag.Title = "Nova Bebida";
    WebImage photo = null;
    var newFileName = "";
    var imagePath = "";

    if (IsPost)
    {
        photo = WebImage.GetImageFromRequest();
        if (photo != null)
        {
            newFileName = Guid.NewGuid().ToString() + "_" + Path.GetFileName(photo.FileName);
            imagePath = @"Images\" + newFileName;
            photo.Save(@"~\" + imagePath);
        }
    }


    List<SelectListItem> listaTipos = (List<SelectListItem>)ViewBag.ListaTiposBebida;
}

<h2>Nova Bebida</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FormCreateBebida", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @name = "Nome" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control", @name = "Descricao" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoBebida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoBebida.Id, listaTipos, new { @class = "form-control", @name = "TipoBebida" })
                @Html.ValidationMessageFor(model => model.TipoBebida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control", @name = "Marca" } })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control", @name = "Valor" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Volume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control", @name = "Volume" } })
                @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control", @name = "Peso" } })
                @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sabor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sabor, new { htmlAttributes = new { @class = "form-control", @name = "Sabor" } })
                @Html.ValidationMessageFor(model => model.Sabor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lote, new { htmlAttributes = new { @class = "form-control", @name = "Lote" } })
                @Html.ValidationMessageFor(model => model.Lote, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFabricacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataFabricacao, new { htmlAttributes = new { @class = "form-control", @name = "DataFabricacao", @type = "date" } })
                @Html.ValidationMessageFor(model => model.DataFabricacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataValidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataValidade, new { htmlAttributes = new { @class = "form-control", @name = "DataValidade", @type = "date" } })
                @Html.ValidationMessageFor(model => model.DataValidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fabricante, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fabricante, new { htmlAttributes = new { @class = "form-control", @name = "Fabricante" } })
                @Html.ValidationMessageFor(model => model.Fabricante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Embalagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Embalagem, new { htmlAttributes = new { @class = "form-control", @name = "Embalagem" } })
                @Html.ValidationMessageFor(model => model.Embalagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoBarras, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodigoBarras, new { htmlAttributes = new { @class = "form-control", @name = "CodigoBarras" } })
                @Html.ValidationMessageFor(model => model.CodigoBarras, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alcoolico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Alcoolico)
                    @Html.ValidationMessageFor(model => model.Alcoolico, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teor, new { htmlAttributes = new { @class = "form-control", @name = "Teor" } })
                @Html.ValidationMessageFor(model => model.Teor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gaseificada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Gaseificada)
                    @Html.ValidationMessageFor(model => model.Gaseificada, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContemGluten, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ContemGluten)
                    @Html.ValidationMessageFor(model => model.ContemGluten, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DicaConservacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DicaConservacao, new { htmlAttributes = new { @class = "form-control", @name = "DicaConservacao" } })
                @Html.ValidationMessageFor(model => model.DicaConservacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaminhoImagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="form-control" name="ArquivoImagem" accept="image/*" />
                @*@Html.EditorFor(model => model.CaminhoImagem, new { htmlAttributes = new { @class = "form-control", @name = "CaminhoImagem", @type = "file", accept = "image/*" } })*@
                @Html.ValidationMessageFor(model => model.CaminhoImagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>
        <br />
        <div class="col-lg-8 col-md-8">
            <button type="button" id="btnAddIng" class="btn btn-info"><span class="glyphicon glyphicon-plus"></span> Adicionar Ingrediente</button>
            <br />
            @Html.ValidationMessageFor(model => model.Ingredientes, "", new { @class = "text-danger" })
            <br />
            <table class="table tab-content table-bordered table-hover" id="tbIngredientes">
                <thead>
                    <tr>
                        <th>Ingrediente</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" class="form-control" name="LstIngrediente" /></td>
                        <td style="text-align:center">@*<button type="button" class="btnDelete btn btn-sm btn-danger"><span class="glyphicon glyphicon-remove"></span> Remover</button>*@</td>
                    </tr>
                </tbody>
            </table>
        </div>








        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Cadastrar" id="btnCadastrar" class="btn btn-default" />
            </div>
        </div>

    </div><!--FIM FORM-->
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script src="~/Scripts/Bebidas/Script_CreateBebidas.js"></script>
