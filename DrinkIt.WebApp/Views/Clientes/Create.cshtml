@model DrinkIt.WebApp.Models.Cliente

@{
    ViewBag.Title = "Cadastrar";

    List<string> msgsErro = (List<string>)ViewBag.Erro ?? new List<string>();
}

<h2>Cadastrar</h2>

@using (Html.BeginForm("Create", "Clientes", FormMethod.Post, new { @id = "FormCadastro" }))
{
    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />

        <div class="form-group">
            @if (msgsErro?.Count > 0)
            {
                foreach (var item in msgsErro)
                {
                    <label style="color:red" class="control-label col-md-2">@item</label>
                }
            }
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Senha, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Confirmar Senha</label>
            <div class="col-md-10">
                <input type="password" class="form-control" name="confirmSenha" />
            </div>
        </div>

        <div class="form-group">
            <label style="color:red" class="control-label col-md-2">@ViewBag.MsgErroConfirmarSenha</label>

        </div>


        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Cpf, new { htmlAttributes = new { @class = "form-control", @id = "clienteCpf" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.DataNascimento, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="Genero">
                    <option value="Masculino">Masculino</option>
                    <option value="Feminino">Feminino</option>
                    <option value="Outro">Outro</option>
                </select>
                @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <button type="button" id="btnAddTel" class="btn btn-info"><span class="glyphicon glyphicon-plus"></span> Adicionar Telefone</button>
            <br />
            <br />
            <label style="color:red">@ViewBag.ErroTelefone</label>
            <table class="table tab-content table-bordered table-hover" id="tbTelefones">
                <thead>
                    <tr>
                        <th>DDD</th>
                        <th>Telefone</th>
                        <th>Tipo</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" maxlength="2" class="form-control dddtel" name="LstDDD" /></td>
                        <td><input type="text" maxlength="9" class="form-control numtel" name="LstTelefone" /></td>
                        <td>
                            <select class="form-control" name="TiposTelefone">
                                <option value="1">Residencial</option>
                                <option value="2">Celular</option>
                                <option value="3">Comercial</option>
                            </select>

                        </td>
                        <td style="text-align:center">@*<button type="button" class="btnDeleteTel btn btn-sm btn-danger"><span class="glyphicon glyphicon-remove"></span> Remover</button>*@</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <hr />

        <!-- Endereço -->
        <div class="form-group">
            @Html.Label("Endereço :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="alert alert-info" role="alert">Esse endereço será gravado por padrão como "Endereço de Cobrança" e "Endereço de Entrega". Para adicionar novos endereços, ou editar o(s) existente(s), acesse o perfil de seu usuário.</div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Endereco.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco.CEP, new { htmlAttributes = new { @class = "form-control", @id = "clienteCep" } })
                @Html.ValidationMessageFor(model => model.Endereco.CEP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Logradouro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco.Numero, new { htmlAttributes = new { @class = "form-control", @id = "clienteNumero" } })
                @Html.ValidationMessageFor(model => model.Endereco.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="Endereco.Estado">
                    <option value="AC">Acre</option>
                    <option value="AL">Alagoas</option>
                    <option value="AP">Amapá</option>
                    <option value="AM">Amazonas</option>
                    <option value="BA">Bahia</option>
                    <option value="CE">Ceará</option>
                    <option value="DF">Distrito Federal</option>
                    <option value="ES">Espírito Santo</option>
                    <option value="GO">Goiás</option>
                    <option value="MA">Maranhão</option>
                    <option value="MT">Mato Grosso</option>
                    <option value="MS">Mato Grosso do Sul</option>
                    <option value="MG">Minas Gerais</option>
                    <option value="PA">Pará</option>
                    <option value="PB">Paraíba</option>
                    <option value="PR">Paraná</option>
                    <option value="PE">Pernambuco</option>
                    <option value="PI">Piauí</option>
                    <option value="RJ">Rio de Janeiro</option>
                    <option value="RN">Rio Grande do Norte</option>
                    <option value="RS">Rio Grande do Sul</option>
                    <option value="RO">Rondônia</option>
                    <option value="RR">Roraima</option>
                    <option value="SC">Santa Catarina</option>
                    <option value="SP">São Paulo</option>
                    <option value="SE">Sergipe</option>
                    <option value="TO">Tocantins</option>
                </select>
                @Html.ValidationMessageFor(model => model.Endereco.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <!-- Cartão -->
        <div class="form-group">
            @Html.Label("Cartão de Crédito :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="alert alert-info" role="alert">Esse cartão será gravado por padrão como "Preferencial". Para adicionar novos cartões, ou editar o(s) existente(s), acesse o perfil de seu usuário.</div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cartao.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cartao.Numero, new { htmlAttributes = new { @class = "form-control", @id = "clienteNumCartao" } })
                @Html.ValidationMessageFor(model => model.Cartao.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cartao.NomeTitular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cartao.NomeTitular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cartao.NomeTitular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cartao.Bandeira, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.Cartao.Bandeira, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cartao.Bandeira, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cartao.CodigoSeguranca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cartao.CodigoSeguranca, new { htmlAttributes = new { @class = "form-control", @type = "text", @id = "clienteCodSeg" } })
                @Html.ValidationMessageFor(model => model.Cartao.CodigoSeguranca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cartao.MesValidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cartao.MesValidade, new { htmlAttributes = new { @class = "form-control", @type = "text", @id = "clienteMesVal" } })
                @Html.ValidationMessageFor(model => model.Cartao.MesValidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cartao.AnoValidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cartao.AnoValidade, new { htmlAttributes = new { @class = "form-control", @type = "text", @id = "clienteAnoVal" } })
                @Html.ValidationMessageFor(model => model.Cartao.AnoValidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="btnCadastrar" type="submit" class="btn btn-success">Cadastrar</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index", "Home", null, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")*@
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"
            integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.12/jquery.mask.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.12/jquery.mask.min.js"></script>

    <script src="~/Scripts/Clientes/Script_CreateClientes.js"></script>


}

