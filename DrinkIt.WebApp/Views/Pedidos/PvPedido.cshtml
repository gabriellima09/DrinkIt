@model IEnumerable<DrinkIt.WebApp.Models.Pedido>
@using DrinkIt.WebApp.Models;

@{

    Layout = null;
    Usuario usuario = (Usuario)Session["Usuario"];
    int rank = 0;
    decimal totalcompras = 0.0M;

    if (usuario.Id != 0)
    {
        rank = ViewBag.RankingCliente;
        totalcompras = Model.Sum(x => x.ValorTotal);
    }

}

@if (Model.Count() == 0)
{
    <h4 style="padding-left:1%">Nenhum pedido encontrado.</h4>
}
else
{
    if (usuario.Id != 0)
    {
        <h4>Meu Ranking Atual: #@rank</h4>
        <h4>Valor Total: R$@totalcompras</h4>

        <br />
    }


    <table class="table table-bordered table-condensed table-hover table-responsive table-striped">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayName("Valor Total")
            </th>
            <th>
                @Html.DisplayName("Data de Atualização")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValorTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.OrderByDescending(x => x.DataAtualizacao).FirstOrDefault().DataAtualizacao)
                </td>
                <td>
                    @string.Concat(item.Status.OrderByDescending(x => x.DataAtualizacao).FirstOrDefault().Id,
                                    " - ",
                                    item.Status.OrderByDescending(x => x.DataAtualizacao).FirstOrDefault().Descricao)
                </td>
                <td align="center">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" id="opcoesPedidos">
                            Opções <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li>@Html.ActionLink("Detalhes", "Details", new { id = item.Id }, new { @class = "btn-info" })</li>
                            @if (usuario.Id != 0)
                            {
                                <li><a id="solicitarTroca" class="btn btn-primary" href="#" onclick="$('#modalTrocaPedidos').modal('show');$('#hiddenPedidoid').val(@item.Id)">Solicitar Cupom de Troca</a></li>
                            }

                        </ul>
                    </div>
                </td>
            </tr>
        }

    </table>

}

<div id="modalTrocaPedidos" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info" style="display: flex;">
                <h3 class="modal-title">Deseja solicitar a troca desse pedido?</h3>
            </div>
            <form id="FormSolicitacao" action="/SolicitacoesTroca/Create/" method="post">
                <div class="modal-body">
                    <div>
                        <h4>Pedido</h4>
                        <hr />
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Id)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.FirstOrDefault().Id)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.DataCadastro)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.FirstOrDefault().DataCadastro)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Status)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.FirstOrDefault().Status)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Cliente)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.FirstOrDefault().Cliente.Nome)
                            </dd>
                        </dl>

                        <hr />

                        <h4>Bebidas</h4>
                        <dl class="dl-horizontal">
                            @if (Model.Count() != 0 && Model != null)
                            {
                                foreach (var item in Model.FirstOrDefault().Bebidas)
                                {
                                    <dt>
                                        @Html.DisplayName(item.Nome)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.Nome)
                                    </dd>
                                }
                            }

                        </dl>
                    </div>

                    <hr />
                    <div>
                        <h5>
                            <label class="control-label">Informe o motivo da solicitação: <br /> (o motivo irá impactar na aprovação/reprovação da mesma)</label>
                        </h5>
                        <textarea class="form-control" name="MotivoSolicitacao" cols="20" rows="5" placeholder="Digite o motivo da troca"></textarea>
                        <input type="hidden" id="hiddenPedidoid" name="IdPedido" value="@Model." />
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSolicitarTroca" type="submit" class="btn btn-success">Solicitar Troca</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/Pedidos/Script_PvPedidos.js"></script>*@